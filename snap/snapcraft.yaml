name: mir-test-tools
adopt-info: mir-test-tools
summary: Mir test scripts and applications
description: Mir test scripts and applications
confinement: strict
base: core20

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
#  - build-on: i386

environment:
  LC_ALL: C.UTF-8
  XCURSOR_PATH: $SNAP/usr/share/icons
  # XDG config
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_DATA_HOME:   $SNAP_USER_DATA
  XDG_DATA_DIRS:   $SNAP/usr/share
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  # Prep for Mir
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/mir/server-platform
  # Graphics
  LD_LIBRARY_PATH:           $SNAP/graphics/lib
  LIBGL_DRIVERS_PATH:        $SNAP/graphics/dri
  LIBVA_DRIVERS_PATH:        $SNAP/graphics/dri
  __EGL_VENDOR_LIBRARY_DIRS: $SNAP/graphics/glvnd/egl_vendor.d

apps:
  smoke-test:
    command-chain:
      - bin/wrapper
    command: usr/bin/mir-smoke-test-runner

  # SDL2 example
  sdl2-test:
    command-chain:
      - bin/wrapper
    command: usr/bin/mir_demo_server --test-client neverputt
    plugs:
      - pulseaudio
    environment:
      # Alsa config
      ALSA_CONFIG_DIR: $SNAP/usr/share/alsa
      ALSA_CONFIG_PATH: ${SNAP}/usr/share/alsa
      ALSA_MIXER_SIMPLE: ${SNAP}/usr/share/alsa
      # SDL config
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
      NEVERBALL_DATA: $SNAP/usr/share/games/neverball/

  # Qt example
  qt-test:
    command-chain:
      - bin/wrapper
    command: usr/bin/mir_demo_server --test-client $SNAP/qml/spinning-rect.sh
    environment:
      # Prep for Qt wayland
      QT_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/
      QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/plugins/platforms/
      QML2_IMPORT_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/qt5/qml

  # GTK3+ example
  gtk3-test:
    command-chain:
      - bin/wrapper
    command: usr/bin/mir_demo_server --test-client $SNAP/gtkapp.sh
    environment:
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}

  performance-test:
    command-chain:
      - bin/performance-env.sh
      - bin/wrapper
    command: usr/bin/mir_performance_tests
    plugs:
      - network-bind

plugs:
  # For Mir
  opengl:
  x11:
  login-session-control:
  graphics-core20:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core20

slots:
  wayland:

layout:
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0
  /usr/share/glmark2:
    bind: $SNAP/usr/share/glmark2
  /usr/share/libdrm:  # Needed by mesa-core20 on AMD GPUs
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:  # Used by mesa-core20 for app specific workarounds
    bind: $SNAP/graphics/drirc.d
  /usr/bin/Xwayland:
    symlink: $SNAP/usr/bin/Xwayland
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio:
    bind: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/pulseaudio
  /etc/gtk-3.0:
    bind: $SNAP/etc/gtk-3.0

parts:
  ppa-setup:
    plugin: nil
    override-pull: |
      sudo apt --assume-yes install software-properties-common
      if [ $(arch) = "x86_64" ]; then
        sudo add-apt-repository -yn ppa:graphics-drivers/ppa
      fi
      sudo add-apt-repository -yu ppa:mir-team/release
      snapcraftctl pull

  recipe-version:
    plugin: nil
    source: .
    source-type: git
    override-build: |
      git rev-list --count HEAD > $SNAPCRAFT_PART_INSTALL/recipe-version
    prime:
      - -recipe-version

  mir-test-tools:
    after: [ recipe-version, ppa-setup ]
    plugin: nil
    override-pull: |
      snapcraftctl pull
      mir_version=`LANG=C apt-cache policy mir-test-tools | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`cat $SNAPCRAFT_STAGE/recipe-version`
      snapcraftctl set-version $mir_version-snap$recipe_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then snapcraftctl set-grade devel; else snapcraftctl set-grade stable; fi
    stage-packages:
    - fonts-freefont-ttf
    - mir-graphics-drivers-desktop
    - mir-test-tools
    - glmark2-es2
    - glmark2-data
    - glmark2-es2-wayland
    - on amd64: [mir-graphics-drivers-nvidia]

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  sdl2-apps:
    plugin: nil
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-net-2.0-0
      - libpulse0
      # SDL2 games
      - neverputt

  qmldemo:
    plugin: dump
    source: qmldemo
    stage-packages:
      - qmlscene
      - qtwayland5
      - qml-module-qtquick2
    organize:
      spinning-rect.qml: qml/spinning-rect.qml
      spinning-rect.sh: qml/spinning-rect.sh

  gtk3app:
    plugin: dump
    source: gtk3
    override-build: |
      snapcraftctl build
      update-mime-database $SNAPCRAFT_PART_INSTALL/usr/share/mime
      # Compile the gsettings schemas
      /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/glib-2.0/glib-compile-schemas "$SNAPCRAFT_PART_INSTALL/usr/share/glib-2.0/schemas"
      # Index the pixbuf loaders
      GDK_PIXBUF_MODULEDIR=$SNAPCRAFT_PART_INSTALL/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/2.10.0/loaders
      "/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders" > "$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache"
      sed s!$SNAPCRAFT_PART_INSTALL!!g --in-place "$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache"
    stage-packages:
      - gnome-sudoku
    build-packages: # These are actually for override-prime - which needs them in the build environment
      - libglib2.0-0
      - libgdk-pixbuf2.0-0
      - librsvg2-dev # So the libpixbufloader-svg.so loader can be loaded by gdk-pixbuf-query-loaders
    override-prime: |
      snapcraftctl prime
      # Compile the gsettings schemas
      /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/glib-2.0/glib-compile-schemas "$SNAPCRAFT_PRIME/usr/share/glib-2.0/schemas"
      # Index the pixbuf loaders
      GDK_PIXBUF_MODULEDIR=$SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/2.10.0/loaders \
      "/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders" > "$SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache"
      sed s!$SNAPCRAFT_PRIME!!g --in-place "$SNAPCRAFT_PRIME/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache"

  performance:
    plugin: dump
    source: performance
    organize:
      performance-env.sh: bin/performance-env.sh

  wrapper:
    plugin: dump
    source: wrapper
    organize:
      wrapper: bin/wrapper

  xwayland:
    plugin: nil
    stage-packages:
      - xwayland
      - libbz2-1.0

  cleanup:
    after: [mir-test-tools, icons, sdl2-apps, qmldemo, gtk3app, performance, wrapper, xwayland]
    plugin: nil
    build-snaps: [ mesa-core20 ]
    override-prime: |
      set -eux
      cd /snap/mesa-core20/current/egl/lib
      find . -type f,l -exec rm -f $SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/{} \;
      rm -fr "$SNAPCRAFT_PRIME/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri"
      for CRUFT in bug lintian man; do
        rm -rf "$SNAPCRAFT_PRIME/usr/share/$CRUFT"
      done
