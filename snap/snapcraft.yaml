name: mir-test-tools
adopt-info: mir-test-tools
summary: Mir test scripts and applications
description: Mir test scripts and applications
confinement: strict
base: core24

platforms:
  amd64:
  arm64:
  armhf:
  riscv64:

package-repositories:
  - type: apt
    ppa: mir-team/release
  - type: apt
    ppa: graphics-drivers/ppa

environment:
  LC_ALL: C.UTF-8
  XCURSOR_PATH: $SNAP/usr/share/icons
  # XDG config
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_DATA_HOME:   $SNAP_USER_DATA
  XDG_DATA_DIRS:   $SNAP/usr/share
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  # Prep for Mir
  MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
  MIR_SERVER_X11_WINDOW_TITLE: ${SNAP_INSTANCE_NAME}

apps:
  smoke-test:
    command-chain:
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir-smoke-test-runner
    plugs: &plugs
      - audio-playback
      - gpu-2404
      - login-session-control
      - network-bind
      - opengl
      - pulseaudio
      - x11
    slots: &slots
      - wayslot

  # SDL2 example
  sdl2-test:
    command-chain:
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir_demo_server --test-client neverputt
    plugs: *plugs
    slots: *slots
    environment:
      # Alsa config
      ALSA_CONFIG_DIR: $SNAP/usr/share/alsa
      ALSA_CONFIG_PATH: ${SNAP}/usr/share/alsa
      ALSA_MIXER_SIMPLE: ${SNAP}/usr/share/alsa
      # SDL config
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}
      NEVERBALL_DATA: $SNAP/usr/share/games/neverball/

  # Qt example
  qt-test:
    command-chain:
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir_demo_server --test-client $SNAP/qml/spinning-rect.sh
    plugs: *plugs
    slots: *slots
    environment:
      # Prep for Qt wayland
      QT_PLUGIN_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt5/plugins/
      QT_QPA_PLATFORM_PLUGIN_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt5/plugins/platforms/
      QML2_IMPORT_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt5/qml

  # GTK3+ example
  gtk3-test:
    command-chain:
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir_demo_server --test-client $SNAP/gtkapp.sh
    plugs: *plugs
    slots: *slots
    environment:
      PATH: $SNAP/bin/:$SNAP/usr/bin/:${SNAP}/usr/games:${PATH}

  # Reference application for Mir window semantics
  flutter-app:
    command-chain:
      - bin/wayland-launch
      - bin/gpu-2404-wrapper
    command: mir_flutter_app
    plugs:
    - gpu-2404
    - opengl
    - wayland

  performance-test:
    command-chain:
      - bin/performance-env.sh
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir_performance_tests
    plugs: *plugs
    slots: *slots

  demo-server:
    command-chain:
      - bin/server-wrapper
      - bin/wrapper
      - bin/gpu-2404-wrapper
    command: usr/bin/mir_demo_server
    plugs: *plugs
    slots: *slots

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404

slots:
  wayslot:
    interface: wayland

layout:
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gdk-pixbuf-2.0:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gdk-pixbuf-2.0
  /usr/share/glmark2:
    symlink: $SNAP/usr/share/glmark2
  /usr/share/drirc.d:  # Used by mesa-2404 for app specific workarounds
    symlink: $SNAP/gpu-2404/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/gpu-2404/X11/XErrorDB
  /usr/share/X11/xkb:
    symlink: $SNAP/usr/share/X11/xkb
  /usr/bin/Xwayland:
    symlink: $SNAP/usr/bin/Xwayland
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/pulseaudio:
    symlink: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/pulseaudio
  # these could be avoided through a desktop plug
  /etc/gtk-3.0:
    bind: $SNAP/etc/gtk-3.0
  /etc/fonts:
    bind: $SNAP/etc/fonts

parts:
  mir-test-tools:
    plugin: nil
    override-build: |
      craftctl default
      mir_version=`LANG=C apt-cache policy mir-test-tools | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      # work around https://github.com/diddlesnaps/snapcraft-multiarch-action/issues/22
      git config --global --add safe.directory ${CRAFT_PROJECT_DIR}
      recipe_version=`git -C ${CRAFT_PROJECT_DIR} rev-list --count HEAD`
      craftctl set version=$mir_version-snap$recipe_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then craftctl set grade=devel; else craftctl set grade=stable; fi
    stage-packages:
    - fonts-freefont-ttf
    - mir-graphics-drivers-desktop
    - mir-platform-graphics-virtual
    - mir-test-tools
    - glmark2-es2
    - glmark2-data
    - glmark2-es2-wayland
    - on amd64: [mir-graphics-drivers-nvidia]

  icons:
    plugin: nil
    stage-packages: [dmz-cursor-theme]

  sdl2-apps:
    plugin: nil
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsdl2-mixer-2.0-0
      - libsdl2-net-2.0-0
      - libpulse0
      # SDL2 games
      - neverputt

  qmldemo:
    plugin: dump
    source: qmldemo
    stage-packages:
      - qmlscene
      - qtwayland5
      - qml-module-qtquick2
    organize:
      spinning-rect.qml: qml/spinning-rect.qml
      spinning-rect.sh: qml/spinning-rect.sh

  gtk3app:
    plugin: dump
    source: gtk3
    stage-packages:
      - gnome-sudoku

  mir-flutter-app:
    plugin: flutter
    source: mir-flutter-app
    build-packages:
      - curl
      - libgtk-3-dev
      - ninja-build
    stage-packages:
      - fonts-ubuntu
      - libgtk-3-0t64
      - libgl1

  performance:
    plugin: dump
    source: performance
    organize:
      performance-env.sh: bin/performance-env.sh

  wrapper:
    plugin: dump
    source: wrapper
    organize:
      wrapper: bin/wrapper
      server-wrapper: bin/server-wrapper

  xwayland:
    plugin: nil
    stage-packages:
      - x11-xkb-utils
      - xkb-data
      - xwayland
      - libbz2-1.0

  wayland-launch:
    plugin: dump
    source: wayland-launch
    override-build: |
      PLUGS="opengl wayland gpu-2404"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/setup.sh
      craftctl default
    stage-packages:
      - inotify-tools

  gsettings+pixbuf+immodules:
    after: [gtk3app]
    plugin: nil
    build-packages:
      - libgdk-pixbuf2.0-0
      - librsvg2-common
      - shared-mime-info
      - libgtk-3-0t64
    override-build: |
      craftctl default
      update-mime-database ${CRAFT_PART_INSTALL}/usr/share/mime
      mkdir -p ${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0/3.0.0/
      /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libgtk-3-0t64/gtk-query-immodules-3.0 > ${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gtk-3.0/3.0.0/immodules.cache
    stage-packages:
      - librsvg2-common
      - gsettings-desktop-schemas
      - libglib2.0-bin
    override-prime: |
      craftctl default
      /usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/glib-2.0/glib-compile-schemas "$CRAFT_PRIME/usr/share/glib-2.0/schemas"
      LOADERS_PATH=$(echo ${CRAFT_PRIME}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gdk-pixbuf-2.0/*/loaders)
      QUERY_LOADERS=/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
      GDK_PIXBUF_MODULEDIR=${LOADERS_PATH} ${QUERY_LOADERS} > ${LOADERS_PATH}/../loaders.cache
      sed s!$CRAFT_PRIME!!g --in-place ${LOADERS_PATH}/../loaders.cache

  gpu-snap:
    after:
      - mir-test-tools
      - icons
      - sdl2-apps
      - qmldemo
      - gtk3app
      - mir-flutter-app
      - performance
      - wrapper
      - xwayland
      - wayland-launch
      - gsettings+pixbuf+immodules
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404
    prime:
      - bin/gpu-2404-wrapper
